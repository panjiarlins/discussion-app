// SCRIPTED PIPELINE
node {
    env.NEXT_PUBLIC_BASE_API = 'https://forum-api.dicoding.dev/v1'
    env.NEXTAUTH_SECRET = 'hMzxv6I31UnuslbQ7aQsooLWw0rVzD+X9Z445egm/68='
    env.NEXTAUTH_URL = 'http://localhost:3000/api/auth'

    stage('Build') {
        docker.image('node:lts-alpine').inside('-p 3000:3000') {
            checkout scm
            sh 'npm ci'
            sh 'npm run build'
        }
    }

    stage('Test') {
        docker.image('cypress/base:latest').inside {
            script {
                // Start server in the background and capture PID
                env.SERVER_PID = sh(script: 'nohup npm run start & echo $!', returnStdout: true).trim()
            }
            sh 'npm run ci:jenkins-test'
        }
    }

    stage('Manual Approval') {
        input message: 'Lanjutkan ke tahap Deploy?'
    }

    stage('Deploy') {
        def serverUser = "ubuntu"
        def serverIP = "ec2-13-215-194-192.ap-southeast-1.compute.amazonaws.com"
        def deployDir = "/home/${serverUser}/discussion-app"
        
        withCredentials([file(credentialsId: 'my-server', variable: 'secretFile')]) {
            sh "scp -i $secretFile -r .next ${serverUser}@${serverIP}:${deployDir}/.next"
            sh "scp -i $secretFile package.json ${serverUser}@${serverIP}:${deployDir}"
            sh "scp -i $secretFile package-lock.json ${serverUser}@${serverIP}:${deployDir}"
            sh "scp -i $secretFile Dockerfile ${serverUser}@${serverIP}:${deployDir}"
            sh """
                ssh -i $secretFile ${serverUser}@${serverIP} "
                    if ! command -v docker &> /dev/null; then
                        echo 'Docker not found. Installing Docker...'
                        sudo apt update
                        sudo apt install -y docker.io
                        sudo systemctl enable --now docker
                    else
                        echo 'Docker is already installed.'
                    fi
                "
            """
            sh """
                ssh -i $secretFile ${serverUser}@${serverIP} "
                    cd ${deployDir} && 
                    docker rm -f discussion-app || true &&
                    docker build -t discussion-app . &&
                    docker run -d \
                        --name discussion-app \
                        --restart on-failure \
                        -p 3000:3000 \
                        -e NEXT_PUBLIC_BASE_API=${env.NEXT_PUBLIC_BASE_API} \
                        -e NEXTAUTH_SECRET=${env.NEXTAUTH_SECRET} \
                        -e NEXTAUTH_URL=${env.NEXTAUTH_URL} \
                        discussion-app
                "
            """
        }
        sh 'sleep 60'
    }
}

/* 
// DECLARATIVE PIPELINE
pipeline {
    agent any

    environment {
        NEXT_PUBLIC_BASE_API = ''
        NEXTAUTH_SECRET = ''
        NEXTAUTH_URL = ''
    }

    stages {
        stage('Build') {
            agent {
                docker {
                    image 'node:lts-alpine'
                    args '-p 3000:3000'
                }
            }
            steps {
                sh 'npm ci'
                sh 'npm run build'   
            }
        }

        stage('Test') {
            agent {
                docker {
                    image 'cypress/base:latest'
                }
            }
            steps {
                script {
                    // Start server in the background and capture PID
                    env.SERVER_PID = sh(script: 'nohup npm run start & echo $!', returnStdout: true).trim()
                }
                sh 'npm run ci:jenkins-test'
            }
        }
    }
}
*/